{"ast":null,"code":"var _jsxFileName = \"/home/aksaakov/Projects/collaborative-editor/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React, { useEffect, useState } from 'react';\nimport Container from '@material-ui/core/Container';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nQuill.register('modules/cursors', QuillCursors);\nlet quillRef = null;\nlet reactQuillRef = null;\n\nconst attachQuillRefs = () => {\n  if (typeof reactQuillRef.getEditor !== 'function') return;\n  quillRef = reactQuillRef.getEditor();\n};\n\nconst ydoc = new Y.Doc();\nconst ytext = ydoc.getText('sometext');\nconst yarray = ydoc.getArray('somearray'); // webrtc\n\nconst webrtcOpts = {\n  filterBcConns: true,\n  awareness: new awarenessProtocol.Awareness(ydoc)\n};\nconst webrtcProvider = new WebrtcProvider('text-editor', ydoc, webrtcOpts); //indexed db\n\nconst indexeddbProvider = new IndexeddbPersistence('text-editor', ydoc);\nindexeddbProvider.on('synced', () => {\n  console.log('content from the database is loaded');\n});\nconst customColors = ['blue', 'green', 'amber', 'red', 'purple', 'silver', 'gold', 'orange', 'pink', 'magenta', 'olive', 'scarlet', 'rose', 'coral'];\n\nfunction App() {\n  _s();\n\n  useEffect(() => {}, []);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"md\",\n      className: \"container\",\n      children: \"hello world\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/aksaakov/Projects/collaborative-editor/src/App.js"],"names":["React","useEffect","useState","Container","Quill","register","QuillCursors","quillRef","reactQuillRef","attachQuillRefs","getEditor","ydoc","Y","Doc","ytext","getText","yarray","getArray","webrtcOpts","filterBcConns","awareness","awarenessProtocol","Awareness","webrtcProvider","WebrtcProvider","indexeddbProvider","IndexeddbPersistence","on","console","log","customColors","App"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,6BAAtB;;AAGAC,KAAK,CAACC,QAAN,CAAe,iBAAf,EAAkCC,YAAlC;AAEA,IAAIC,QAAQ,GAAC,IAAb;AACA,IAAIC,aAAa,GAAC,IAAlB;;AAEA,MAAMC,eAAe,GAAG,MAAM;AAC5B,MAAI,OAAOD,aAAa,CAACE,SAArB,KAAmC,UAAvC,EAAmD;AACnDH,EAAAA,QAAQ,GAAGC,aAAa,CAACE,SAAd,EAAX;AACD,CAHD;;AAKA,MAAMC,IAAI,GAAG,IAAIC,CAAC,CAACC,GAAN,EAAb;AACA,MAAMC,KAAK,GAAGH,IAAI,CAACI,OAAL,CAAa,UAAb,CAAd;AACA,MAAMC,MAAM,GAAGL,IAAI,CAACM,QAAL,CAAc,WAAd,CAAf,C,CAEA;;AACA,MAAMC,UAAU,GAAG;AACjBC,EAAAA,aAAa,EAAE,IADE;AAEjBC,EAAAA,SAAS,EAAE,IAAIC,iBAAiB,CAACC,SAAtB,CAAgCX,IAAhC;AAFM,CAAnB;AAIA,MAAMY,cAAc,GAAG,IAAIC,cAAJ,CAAmB,aAAnB,EAAkCb,IAAlC,EAAwCO,UAAxC,CAAvB,C,CAEA;;AACA,MAAMO,iBAAiB,GAAG,IAAIC,oBAAJ,CAAyB,aAAzB,EAAwCf,IAAxC,CAA1B;AACAc,iBAAiB,CAACE,EAAlB,CAAqB,QAArB,EAA+B,MAAM;AACnCC,EAAAA,OAAO,CAACC,GAAR,CAAY,qCAAZ;AACD,CAFD;AAIA,MAAMC,YAAY,GAAG,CAAC,MAAD,EAAS,OAAT,EAAkB,OAAlB,EAA2B,KAA3B,EAAkC,QAAlC,EAA4C,QAA5C,EAAsD,MAAtD,EAA8D,QAA9D,EAAwE,MAAxE,EAAgF,SAAhF,EAA2F,OAA3F,EAAoG,SAApG,EAA+G,MAA/G,EAAuH,OAAvH,CAArB;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEb9B,EAAAA,SAAS,CAAC,MAAI,CAEb,CAFQ,EAEN,EAFM,CAAT;AAIA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,4BACE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,SAAD;AAAW,MAAA,QAAQ,EAAC,IAApB;AAAyB,MAAA,SAAS,EAAC,WAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;GAdQ8B,G;;KAAAA,G;AAgBT,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport React, { useEffect, useState } from 'react';\nimport Container from '@material-ui/core/Container';\n\n\nQuill.register('modules/cursors', QuillCursors)\n\nlet quillRef=null;\nlet reactQuillRef=null;\n\nconst attachQuillRefs = () => {\n  if (typeof reactQuillRef.getEditor !== 'function') return;\n  quillRef = reactQuillRef.getEditor();\n}\n\nconst ydoc = new Y.Doc()\nconst ytext = ydoc.getText('sometext')\nconst yarray = ydoc.getArray('somearray')\n\n// webrtc\nconst webrtcOpts = { \n  filterBcConns: true, \n  awareness: new awarenessProtocol.Awareness(ydoc)\n}\nconst webrtcProvider = new WebrtcProvider('text-editor', ydoc, webrtcOpts)\n\n//indexed db\nconst indexeddbProvider = new IndexeddbPersistence('text-editor', ydoc)\nindexeddbProvider.on('synced', () => {\n  console.log('content from the database is loaded')\n})\n\nconst customColors = ['blue', 'green', 'amber', 'red', 'purple', 'silver', 'gold', 'orange', 'pink', 'magenta', 'olive', 'scarlet', 'rose', 'coral']\n\nfunction App() {\n \n  useEffect(()=>{\n  \n  }, [])\n \n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <Container maxWidth=\"md\" className=\"container\"> \n       hello world\n      </Container>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}