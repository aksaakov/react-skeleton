{"ast":null,"code":"var _jsxFileName = \"/home/aksaakov/Projects/collaborative-editor/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport React, { useEffect, useState } from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Container from '@material-ui/core/Container';\nimport * as Y from 'yjs';\nimport { IndexeddbPersistence } from 'y-indexeddb';\nimport { WebrtcProvider } from 'y-webrtc';\nimport { QuillBinding } from 'y-quill';\nimport Quill from 'quill';\nimport QuillCursors from 'quill-cursors';\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\nimport * as awarenessProtocol from 'y-protocols/awareness.js';\nimport { Button } from '@material-ui/core';\nimport { isCompositeComponent } from 'react-dom/test-utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst {\n  uniqueNamesGenerator,\n  colors,\n  animals,\n  adjectives\n} = require('unique-names-generator');\n\nQuill.register('modules/cursors', QuillCursors);\nlet quillRef = null;\nlet reactQuillRef = null;\n\nconst attachQuillRefs = () => {\n  if (typeof reactQuillRef.getEditor !== 'function') return;\n  quillRef = reactQuillRef.getEditor();\n};\n\nconst ydoc = new Y.Doc();\nconst ytext = ydoc.getText('sometext');\nconst yarray = ydoc.getArray('somearray'); // webrtc\n\nconst webrtcOpts = {\n  filterBcConns: true,\n  awareness: new awarenessProtocol.Awareness(ydoc)\n};\nconst webrtcProvider = new WebrtcProvider('text-editor', ydoc, webrtcOpts); //indexed db\n\nconst indexeddbProvider = new IndexeddbPersistence('text-editor', ydoc);\nindexeddbProvider.on('synced', () => {\n  console.log('content from the database is loaded');\n});\nconst customColors = ['blue', 'green', 'amber', 'red', 'purple', 'silver', 'gold', 'orange', 'pink'];\n\nfunction App() {\n  _s();\n\n  // const [username, setUsername] = useState('');\n  // const [userColor, setUserColor] = useState('');\n  const [users, setUsers] = useState([]);\n  const [canEdit, setCanEdit] = useState();\n\n  function handleClear() {\n    yarray.delete(0, yarray.length); // yarray.push([username])\n  }\n\n  function logOn() {\n    setCanEdit(true);\n    console.log('username', username);\n\n    const containsUsername = user => user.uname === username;\n\n    if (!yarray.toArray().some(containsUsername)) {\n      console.log('does not contain username');\n      yarray.push([{\n        uname: username,\n        ucolor: userColor\n      }]);\n    }\n  }\n\n  function logOff() {\n    setCanEdit(false);\n    console.log('logging off');\n    yarray.toArray().forEach((usr, index) => {\n      if (usr.uname === username) {\n        console.log('deleting');\n        yarray.delete(index, 1);\n      }\n    });\n  }\n\n  const randomName = uniqueNamesGenerator({\n    dictionaries: [adjectives, colors, animals],\n    separator: ' ',\n    length: 2\n  });\n  useEffect(() => {\n    attachQuillRefs();\n    yarray.observe(_ => {\n      setUsers(yarray.toArray());\n      console.log('yarray state: ', yarray.toArray());\n    });\n    indexeddbProvider.get('user').then(db_user => {\n      if (db_user) {\n        return db_user;\n      } else {\n        const newUser = {\n          name: randomName,\n          colour: customColors[Math.floor(Math.random() * customColors.length)]\n        };\n        indexeddbProvider.set('user', newUser);\n        return newUser;\n      }\n    }).then(currentUser => {\n      // setUsername(currentUser.name)\n      // setUserColor(currentUser.colour)\n      webrtcProvider.awareness.setLocalStateField('user', {\n        name: currentUser.name,\n        color: currentUser.colour\n      });\n    }); // window.addEventListener(\"beforeunload\", logOff());\n\n    new QuillBinding(ytext, quillRef, webrtcProvider.awareness);\n  }, []);\n  console.log('getting yarray ', yarray.toArray());\n\n  const containsUsername = user => user.uname === user;\n\n  if (yarray.toArray().some(containsUsername)) {\n    console.log('user logged in');\n    setCanEdit(true);\n  }\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"md\",\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Your nickname: \", /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: userColor\n          },\n          children: username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 28\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"Currently editting: \", users.map(user => {\n            return /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                color: user.ucolor\n              },\n              children: [user.uname, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 64\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: () => logOff(),\n        children: \"Leave\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: () => logOn(),\n        children: \"Join\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        hidden: !canEdit,\n        children: /*#__PURE__*/_jsxDEV(ReactQuill, {\n          ref: el => {\n            reactQuillRef = el;\n          },\n          theme: 'snow',\n          modules: {\n            cursors: true\n          },\n          style: {\n            height: '300px',\n            paddingBottom: '50px',\n            paddingTop: '10px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"xsK6Q+sT7QkcsTbitY74c9QzxNs=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/aksaakov/Projects/collaborative-editor/src/App.js"],"names":["makeStyles","TextField","React","useEffect","useState","CssBaseline","Container","Y","IndexeddbPersistence","WebrtcProvider","QuillBinding","Quill","QuillCursors","ReactQuill","awarenessProtocol","Button","isCompositeComponent","uniqueNamesGenerator","colors","animals","adjectives","require","register","quillRef","reactQuillRef","attachQuillRefs","getEditor","ydoc","Doc","ytext","getText","yarray","getArray","webrtcOpts","filterBcConns","awareness","Awareness","webrtcProvider","indexeddbProvider","on","console","log","customColors","App","users","setUsers","canEdit","setCanEdit","handleClear","delete","length","logOn","username","containsUsername","user","uname","toArray","some","push","ucolor","userColor","logOff","forEach","usr","index","randomName","dictionaries","separator","observe","_","get","then","db_user","newUser","name","colour","Math","floor","random","set","currentUser","setLocalStateField","color","map","el","cursors","height","paddingBottom","paddingTop"],"mappings":"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","sourcesContent":["import './App.css';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport React, { useEffect, useState } from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Container from '@material-ui/core/Container';\nimport * as Y from 'yjs'\nimport { IndexeddbPersistence } from 'y-indexeddb'\nimport { WebrtcProvider } from 'y-webrtc'\nimport { QuillBinding } from 'y-quill'\nimport Quill from 'quill';\nimport QuillCursors from 'quill-cursors'\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\nimport * as awarenessProtocol from 'y-protocols/awareness.js'\nimport { Button } from '@material-ui/core';\nimport { isCompositeComponent } from 'react-dom/test-utils';\nconst { uniqueNamesGenerator, colors, animals, adjectives } = require('unique-names-generator');\n\nQuill.register('modules/cursors', QuillCursors)\n\nlet quillRef=null;\nlet reactQuillRef=null;\n\nconst attachQuillRefs = () => {\n  if (typeof reactQuillRef.getEditor !== 'function') return;\n  quillRef = reactQuillRef.getEditor();\n}\n\nconst ydoc = new Y.Doc()\nconst ytext = ydoc.getText('sometext')\nconst yarray = ydoc.getArray('somearray')\n\n// webrtc\nconst webrtcOpts = { \n  filterBcConns: true, \n  awareness: new awarenessProtocol.Awareness(ydoc)\n}\nconst webrtcProvider = new WebrtcProvider('text-editor', ydoc, webrtcOpts)\n\n//indexed db\nconst indexeddbProvider = new IndexeddbPersistence('text-editor', ydoc)\nindexeddbProvider.on('synced', () => {\n  console.log('content from the database is loaded')\n})\n\nconst customColors = ['blue', 'green', 'amber', 'red', 'purple', 'silver', 'gold', 'orange', 'pink']\n\nfunction App() {\n  // const [username, setUsername] = useState('');\n  // const [userColor, setUserColor] = useState('');\n  const [users, setUsers] = useState([]);\n  const [canEdit, setCanEdit] = useState();\n\n  function handleClear() {\n    yarray.delete(0, yarray.length)\n    // yarray.push([username])\n  }\n\n  function logOn() {\n    setCanEdit(true)\n    console.log('username', username)\n    const containsUsername = (user) => user.uname === username;\n    if(!yarray.toArray().some(containsUsername)) {\n      console.log('does not contain username')\n      yarray.push([{uname: username, ucolor: userColor}])\n    }\n  }\n\n  function logOff() {\n    setCanEdit(false)\n    console.log('logging off')\n    yarray.toArray().forEach((usr, index)=>{\n      if (usr.uname === username) {\n        console.log('deleting')\n        yarray.delete(index, 1)\n      }\n    })\n  }\n\n  const randomName = uniqueNamesGenerator({ dictionaries: [adjectives, colors, animals], separator: ' ' , length: 2, });\n\n  useEffect(()=>{\n    attachQuillRefs()\n    \n    yarray.observe(_ => {\n      setUsers(yarray.toArray())\n      console.log('yarray state: ', yarray.toArray())\n    })\n\n    indexeddbProvider.get('user').then((db_user) => {\n      if (db_user) {\n        return db_user\n      } else {\n        const newUser = {\n          name: randomName,\n          colour: customColors[Math.floor(Math.random()*customColors.length)],\n        }\n        indexeddbProvider.set('user', newUser)  \n        return newUser\n      }\n    }).then((currentUser)=>{\n      // setUsername(currentUser.name)\n      // setUserColor(currentUser.colour)\n      webrtcProvider.awareness.setLocalStateField('user', {\n        name: currentUser.name,\n        color: currentUser.colour\n      })\n    })\n    // window.addEventListener(\"beforeunload\", logOff());\n    \n    new QuillBinding(ytext, quillRef, webrtcProvider.awareness)\n  }, [])\n \n  console.log('getting yarray ', yarray.toArray())\n  const containsUsername = (user) => user.uname === user;\n  if(yarray.toArray().some(containsUsername)) {\n    console.log('user logged in')\n    setCanEdit(true)\n  }\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <Container maxWidth=\"md\" className=\"container\"> \n        <h3>Your nickname: <span style={{color: userColor}}>{username}</span></h3> \n        <div>\n        <h4>Currently editting: { users.map((user) => { return <span style={{color: user.ucolor}}>{user.uname} </span>})}</h4>\n        </div>\n        <Button variant=\"contained\" onClick={() => logOff()}>Leave</Button>\n        <Button variant=\"contained\" onClick={() => logOn()}>Join</Button>\n        <div hidden={!canEdit}>\n        <ReactQuill \n          ref={(el) => { reactQuillRef = el }}\n          theme={'snow'} \n          modules={{ cursors:true }} \n          style={{ height: '300px', paddingBottom: '50px', paddingTop: '10px' }} \n        />\n        </div>\n        \n        {/* <Button hidden={true} style={{marginLeft: '72%'}} variant=\"contained\" onClick={() => handleClear()}>Dump</Button> */}\n      </Container>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}