{"ast":null,"code":"var _jsxFileName = \"/home/aksaakov/Projects/collaborative-editor/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport React, { useEffect, useState } from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Container from '@material-ui/core/Container';\nimport * as Y from 'yjs';\nimport { IndexeddbPersistence } from 'y-indexeddb';\nimport { WebrtcProvider } from 'y-webrtc';\nimport { QuillBinding } from 'y-quill';\nimport Quill from 'quill';\nimport QuillCursors from 'quill-cursors';\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\nimport * as awarenessProtocol from 'y-protocols/awareness.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst {\n  uniqueNamesGenerator,\n  colors,\n  animals,\n  adjectives\n} = require('unique-names-generator');\n\nQuill.register('modules/cursors', QuillCursors);\n\nfunction App() {\n  _s();\n\n  let quillRef = null;\n  let reactQuillRef = null;\n  const [username, setUsername] = useState('');\n  const [users, setUsers] = useState([]); // name randomiser\n\n  const customColors = ['green', 'blue', 'red', 'yellow', 'orange', 'pink', 'purple'];\n  const randomColor = uniqueNamesGenerator({\n    dictionaries: [customColors],\n    length: 1,\n    separator: \"-\"\n  });\n  let webrtcProvider;\n  useEffect(() => {\n    attachQuillRefs();\n    const ydoc = new Y.Doc();\n    const ytext = ydoc.getText('sometext');\n    const yarray = ydoc.getArray('somearray');\n    yarray.observe(_ => {\n      console.log(yarray.toArray());\n    }); // webrtc\n\n    const webrtcOpts = {\n      filterBcConns: true,\n      awareness: new awarenessProtocol.Awareness(ydoc)\n    };\n    webrtcProvider = new WebrtcProvider('text-editor', ydoc, webrtcOpts); //indexed db\n\n    const indexeddbProvider = new IndexeddbPersistence('text-editor', ydoc);\n    indexeddbProvider.on('synced', () => {\n      console.log('content from the database is loaded');\n    });\n    indexeddbProvider.get('username').then(db_username => {\n      if (db_username) {\n        setUsername(db_username);\n        console.log('received username ' + db_username);\n      } else {\n        const randomName = uniqueNamesGenerator({\n          dictionaries: [adjectives, colors, animals],\n          separator: ' ',\n          length: 2\n        });\n        setUsername(randomName);\n        yarray.push([randomName]);\n        indexeddbProvider.set('username', randomName);\n        console.log('setting username to ' + randomName);\n      }\n    }, function (err) {\n      console.log('no username', err); // Error: \"It broke\"\n    });\n    new QuillBinding(ytext, quillRef, webrtcProvider.awareness);\n  }, []);\n  console.log('username is: ', username);\n  webrtcProvider.awareness.setLocalStateField('user', {\n    name: username,\n    color: randomColor\n  });\n\n  const attachQuillRefs = () => {\n    if (typeof reactQuillRef.getEditor !== 'function') return;\n    quillRef = reactQuillRef.getEditor();\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"md\",\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Your nickname: \", username]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"You are collaborating with: \", username]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ReactQuill, {\n        ref: el => {\n          reactQuillRef = el;\n        },\n        theme: 'snow',\n        modules: {\n          cursors: true\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"aVQ2h1sCUBzFTj0Glq9uZBmsrmI=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/aksaakov/Projects/collaborative-editor/src/App.js"],"names":["makeStyles","TextField","React","useEffect","useState","CssBaseline","Container","Y","IndexeddbPersistence","WebrtcProvider","QuillBinding","Quill","QuillCursors","ReactQuill","awarenessProtocol","uniqueNamesGenerator","colors","animals","adjectives","require","register","App","quillRef","reactQuillRef","username","setUsername","users","setUsers","customColors","randomColor","dictionaries","length","separator","webrtcProvider","attachQuillRefs","ydoc","Doc","ytext","getText","yarray","getArray","observe","_","console","log","toArray","webrtcOpts","filterBcConns","awareness","Awareness","indexeddbProvider","on","get","then","db_username","randomName","push","set","err","setLocalStateField","name","color","getEditor","el","cursors"],"mappings":"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","sourcesContent":["import './App.css';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport React, { useEffect, useState } from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Container from '@material-ui/core/Container';\nimport * as Y from 'yjs'\nimport { IndexeddbPersistence } from 'y-indexeddb'\nimport { WebrtcProvider } from 'y-webrtc'\nimport { QuillBinding } from 'y-quill'\nimport Quill from 'quill';\nimport QuillCursors from 'quill-cursors'\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\nimport * as awarenessProtocol from 'y-protocols/awareness.js'\nconst { uniqueNamesGenerator, colors, animals, adjectives } = require('unique-names-generator');\n\nQuill.register('modules/cursors', QuillCursors)\n\nfunction App() {\n  let quillRef=null;\n  let reactQuillRef=null;\n  const [username, setUsername] = useState('');\n  const [users, setUsers] = useState([]);\n\n  // name randomiser\n  const customColors = [\n    'green', 'blue', 'red', 'yellow', 'orange', 'pink', 'purple'\n  ]\n  const randomColor = uniqueNamesGenerator({ dictionaries: [customColors], length: 1, separator: \"-\" });\n\n  let webrtcProvider\n  useEffect(()=>{\n    attachQuillRefs()\n    const ydoc = new Y.Doc()\n    const ytext = ydoc.getText('sometext')\n    const yarray = ydoc.getArray('somearray')\n    yarray.observe(_ => {\n      console.log(yarray.toArray())\n    })\n\n    // webrtc\n    const webrtcOpts = { \n      filterBcConns: true, \n      awareness: new awarenessProtocol.Awareness(ydoc)\n    }\n    webrtcProvider = new WebrtcProvider('text-editor', ydoc, webrtcOpts)\n    \n\n    //indexed db\n    const indexeddbProvider = new IndexeddbPersistence('text-editor', ydoc)\n    indexeddbProvider.on('synced', () => {\n      console.log('content from the database is loaded')\n    })\n    \n    indexeddbProvider.get('username').then((db_username) => {\n      if (db_username) {\n        setUsername(db_username)\n        console.log('received username ' + db_username)\n      } else {\n        const randomName = uniqueNamesGenerator({ dictionaries: [adjectives, colors, animals], separator: ' ' , length: 2, });\n        setUsername(randomName)\n        yarray.push([randomName])\n        indexeddbProvider.set('username', randomName)\n        console.log('setting username to ' + randomName)\n      }\n    }, function(err) {\n      console.log('no username', err); // Error: \"It broke\"\n    });\n\n    \n\n    new QuillBinding(ytext, quillRef, webrtcProvider.awareness)\n  }, [])\n\n  console.log('username is: ', username)\n    webrtcProvider.awareness.setLocalStateField('user', {\n      name: username,\n      color: randomColor\n    })\n\n  const attachQuillRefs = () => {\n    if (typeof reactQuillRef.getEditor !== 'function') return;\n    quillRef = reactQuillRef.getEditor();\n  }\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <Container maxWidth=\"md\" className=\"container\"> \n        <h3>Your nickname: {username}</h3>\n        <h4>You are collaborating with: {username}</h4>\n        {/* <form className={classes.root} noValidate autoComplete=\"off\">\n        </form> */}\n        <ReactQuill \n          ref={(el) => { reactQuillRef = el }}\n          theme={'snow'} \n          modules={{ cursors:true }}  \n        />\n      </Container>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}