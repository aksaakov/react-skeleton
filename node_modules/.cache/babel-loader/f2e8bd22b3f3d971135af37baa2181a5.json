{"ast":null,"code":"var _jsxFileName = \"/home/aksaakov/Projects/collaborative-editor/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport React, { useEffect, useState } from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Container from '@material-ui/core/Container';\nimport * as Y from 'yjs';\nimport { IndexeddbPersistence } from 'y-indexeddb';\nimport { WebrtcProvider } from 'y-webrtc';\nimport { QuillBinding } from 'y-quill';\nimport Quill from 'quill';\nimport QuillCursors from 'quill-cursors';\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\nimport * as awarenessProtocol from 'y-protocols/awareness.js';\nimport { Button } from '@material-ui/core';\nimport { isCompositeComponent } from 'react-dom/test-utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst {\n  uniqueNamesGenerator,\n  colors,\n  animals,\n  adjectives\n} = require('unique-names-generator');\n\nQuill.register('modules/cursors', QuillCursors);\nlet quillRef = null;\nlet reactQuillRef = null;\n\nconst attachQuillRefs = () => {\n  if (typeof reactQuillRef.getEditor !== 'function') return;\n  quillRef = reactQuillRef.getEditor();\n};\n\nconst ydoc = new Y.Doc();\nconst ytext = ydoc.getText('sometext');\nconst yarray = ydoc.getArray('somearray'); // webrtc\n\nconst webrtcOpts = {\n  filterBcConns: true,\n  awareness: new awarenessProtocol.Awareness(ydoc)\n};\nconst webrtcProvider = new WebrtcProvider('text-editor', ydoc, webrtcOpts); //indexed db\n\nconst indexeddbProvider = new IndexeddbPersistence('text-editor', ydoc);\nindexeddbProvider.on('synced', () => {\n  console.log('content from the database is loaded');\n});\n\nfunction App() {\n  _s();\n\n  const [username, setUsername] = useState('');\n  const [userColor, setUserColor] = useState('');\n  const [users, setUsers] = useState([]);\n  const [canEdit, setCanEdit] = useState();\n\n  function handleClear() {\n    yarray.delete(0, yarray.length); // yarray.push([username])\n  }\n\n  function logOn() {\n    setCanEdit(true);\n    console.log('username', username);\n\n    if (yarray.toArray().length === 0) {\n      yarray.push([{\n        uname: username,\n        ucolor: userColor\n      }]);\n    } else {\n      yarray.toArray().forEach((usr, index) => {\n        console.log('usr', usr);\n\n        if (usr.uname !== username) {\n          console.log('adding');\n          yarray.push([{\n            username,\n            userColor\n          }]);\n        }\n      });\n    }\n  }\n\n  function logOff() {\n    setCanEdit(false);\n    console.log('username', username);\n    console.log('???', yarray.toArray());\n    yarray.toArray().forEach((usr, index) => {\n      console.log('usr', usr);\n\n      if (usr.uname === username) {\n        console.log('deleting');\n        yarray.delete(index, 1);\n      }\n    });\n    console.log('???', yarray.toArray());\n    ydoc.destroy();\n  }\n\n  const randomName = uniqueNamesGenerator({\n    dictionaries: [adjectives, colors, animals],\n    separator: ' ',\n    length: 2\n  });\n  useEffect(() => {\n    attachQuillRefs();\n    yarray.observe(_ => {\n      setUsers(yarray.toArray());\n      console.log('yarray state: ', yarray.toArray());\n    });\n    indexeddbProvider.get('user').then(db_user => {\n      if (db_user) {\n        return db_user;\n      } else {\n        const newUser = {\n          name: randomName,\n          userColor: colors[Math.floor(Math.random() * colors.length)]\n        };\n        indexeddbProvider.set('user', newUser);\n        return newUser;\n      }\n    }).then(currentUser => {\n      setUsername(currentUser.name);\n      setUserColor(currentUser.userColor);\n      console.log(currentUser.name);\n      console.log(currentUser.userColor);\n      webrtcProvider.awareness.setLocalStateField('user', {\n        name: currentUser.name,\n        color: currentUser.userColor\n      });\n      yarray.toArray().forEach(el => {\n        if (el === currentUser.name) setCanEdit(true);\n      });\n    });\n    console.log(users);\n    new QuillBinding(ytext, quillRef, webrtcProvider.awareness);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"md\",\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Your nickname: \", /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: userColor\n          },\n          children: username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 28\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Currently editting: \", users.map(user => {\n          return /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: user.ucolor\n            },\n            children: user.uname\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 64\n          }, this);\n        }), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        hidden: !canEdit,\n        children: /*#__PURE__*/_jsxDEV(ReactQuill, {\n          ref: el => {\n            reactQuillRef = el;\n          },\n          theme: 'snow',\n          modules: {\n            cursors: true\n          } // onFocus={() => onEditorFoucs()}\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: () => logOff(),\n        children: \"LogOff\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: () => logOn(),\n        children: \"LogOn\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          marginLeft: '72%'\n        },\n        variant: \"contained\",\n        onClick: () => handleClear(),\n        children: \"Dump\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"5xcdJJJVXGlJ5uXQwN2S9iMmBQc=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/aksaakov/Projects/collaborative-editor/src/App.js"],"names":["makeStyles","TextField","React","useEffect","useState","CssBaseline","Container","Y","IndexeddbPersistence","WebrtcProvider","QuillBinding","Quill","QuillCursors","ReactQuill","awarenessProtocol","Button","isCompositeComponent","uniqueNamesGenerator","colors","animals","adjectives","require","register","quillRef","reactQuillRef","attachQuillRefs","getEditor","ydoc","Doc","ytext","getText","yarray","getArray","webrtcOpts","filterBcConns","awareness","Awareness","webrtcProvider","indexeddbProvider","on","console","log","App","username","setUsername","userColor","setUserColor","users","setUsers","canEdit","setCanEdit","handleClear","delete","length","logOn","toArray","push","uname","ucolor","forEach","usr","index","logOff","destroy","randomName","dictionaries","separator","observe","_","get","then","db_user","newUser","name","Math","floor","random","set","currentUser","setLocalStateField","color","el","map","user","cursors","marginLeft"],"mappings":"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","sourcesContent":["import './App.css';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport React, { useEffect, useState } from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Container from '@material-ui/core/Container';\nimport * as Y from 'yjs'\nimport { IndexeddbPersistence } from 'y-indexeddb'\nimport { WebrtcProvider } from 'y-webrtc'\nimport { QuillBinding } from 'y-quill'\nimport Quill from 'quill';\nimport QuillCursors from 'quill-cursors'\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\nimport * as awarenessProtocol from 'y-protocols/awareness.js'\nimport { Button } from '@material-ui/core';\nimport { isCompositeComponent } from 'react-dom/test-utils';\nconst { uniqueNamesGenerator, colors, animals, adjectives } = require('unique-names-generator');\n\nQuill.register('modules/cursors', QuillCursors)\n\nlet quillRef=null;\nlet reactQuillRef=null;\n\nconst attachQuillRefs = () => {\n  if (typeof reactQuillRef.getEditor !== 'function') return;\n  quillRef = reactQuillRef.getEditor();\n}\n\nconst ydoc = new Y.Doc()\nconst ytext = ydoc.getText('sometext')\nconst yarray = ydoc.getArray('somearray')\n\n// webrtc\nconst webrtcOpts = { \n  filterBcConns: true, \n  awareness: new awarenessProtocol.Awareness(ydoc)\n}\nconst webrtcProvider = new WebrtcProvider('text-editor', ydoc, webrtcOpts)\n\n//indexed db\nconst indexeddbProvider = new IndexeddbPersistence('text-editor', ydoc)\nindexeddbProvider.on('synced', () => {\n  console.log('content from the database is loaded')\n})\n\nfunction App() {\n  const [username, setUsername] = useState('');\n  const [userColor, setUserColor] = useState('');\n  const [users, setUsers] = useState([]);\n  const [canEdit, setCanEdit] = useState();\n\n  function handleClear() {\n    yarray.delete(0, yarray.length)\n    // yarray.push([username])\n  }\n\n  function logOn() {\n    setCanEdit(true)\n    console.log('username', username)\n    if(yarray.toArray().length === 0) {\n      yarray.push([{uname: username, ucolor: userColor}])\n    } else {\n      yarray.toArray().forEach((usr, index)=>{\n        console.log('usr', usr)\n        if (usr.uname !== username) {\n          console.log('adding')\n          yarray.push([{username, userColor}])\n        } \n      })\n    }\n  }\n\n  function logOff() {\n    setCanEdit(false)\n    console.log('username', username)\n    console.log('???', yarray.toArray())\n    yarray.toArray().forEach((usr, index)=>{\n      console.log('usr', usr)\n      if (usr.uname === username) {\n        console.log('deleting')\n        yarray.delete(index, 1)\n      }\n    })\n    console.log('???', yarray.toArray())\n    ydoc.destroy()\n  }\n\n  const randomName = uniqueNamesGenerator({ dictionaries: [adjectives, colors, animals], separator: ' ' , length: 2, });\n\n  useEffect(()=>{\n    attachQuillRefs()\n    \n    yarray.observe(_ => {\n      setUsers(yarray.toArray())\n      console.log('yarray state: ', yarray.toArray())\n    })\n\n    indexeddbProvider.get('user').then((db_user) => {\n      if (db_user) {\n        return db_user\n      } else {\n        const newUser = {\n          name: randomName,\n          userColor: colors[Math.floor(Math.random()*colors.length)],\n        }\n        indexeddbProvider.set('user', newUser)  \n        return newUser\n      }\n    }).then((currentUser)=>{\n      setUsername(currentUser.name)\n      setUserColor(currentUser.userColor)\n      console.log(currentUser.name)\n      console.log(currentUser.userColor)\n      webrtcProvider.awareness.setLocalStateField('user', {\n        name: currentUser.name,\n        color: currentUser.userColor\n      })\n      yarray.toArray().forEach(el => {\n        if(el === currentUser.name)\n        setCanEdit(true)\n      })\n    })\n    console.log(users);\n    new QuillBinding(ytext, quillRef, webrtcProvider.awareness)\n  }, [])\n \n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <Container maxWidth=\"md\" className=\"container\"> \n        <h3>Your nickname: <span style={{color: userColor}}>{username}</span></h3>\n        <h4>Currently editting: { users.map((user) => { return <span style={{color: user.ucolor}}>{user.uname}</span>\n    })} </h4>\n        {/* <form className={classes.root} noValidate autoComplete=\"off\">\n        </form> */}\n        <div hidden={!canEdit}>\n        <ReactQuill \n          ref={(el) => { reactQuillRef = el }}\n          theme={'snow'} \n          modules={{ cursors:true }}  \n          // onFocus={() => onEditorFoucs()}\n        />\n        </div>\n        <Button variant=\"contained\" onClick={() => logOff()}>LogOff</Button>\n        <Button variant=\"contained\" onClick={() => logOn()}>LogOn</Button>\n        <Button style={{marginLeft: '72%'}} variant=\"contained\" onClick={() => handleClear()}>Dump</Button>\n      </Container>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}