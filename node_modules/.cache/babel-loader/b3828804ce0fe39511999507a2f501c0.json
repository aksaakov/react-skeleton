{"ast":null,"code":"var _jsxFileName = \"/home/aksaakov/Projects/collaborative-editor/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport React, { useEffect, useState } from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Container from '@material-ui/core/Container';\nimport * as Y from 'yjs';\nimport { IndexeddbPersistence } from 'y-indexeddb';\nimport { WebrtcProvider } from 'y-webrtc';\nimport { QuillBinding } from 'y-quill';\nimport Quill from 'quill';\nimport QuillCursors from 'quill-cursors';\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\nimport * as awarenessProtocol from 'y-protocols/awareness.js';\nimport { Button } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst {\n  uniqueNamesGenerator,\n  colors,\n  animals,\n  adjectives\n} = require('unique-names-generator');\n\nQuill.register('modules/cursors', QuillCursors);\nlet quillRef = null;\nlet reactQuillRef = null;\n\nconst attachQuillRefs = () => {\n  if (typeof reactQuillRef.getEditor !== 'function') return;\n  quillRef = reactQuillRef.getEditor();\n};\n\nconst ydoc = new Y.Doc();\nconst ytext = ydoc.getText('sometext');\nconst yarray = ydoc.getArray('somearray');\nconsole.log(ydoc.store); // webrtc\n\nconst webrtcOpts = {\n  filterBcConns: true,\n  awareness: new awarenessProtocol.Awareness(ydoc)\n};\nconst webrtcProvider = new WebrtcProvider('text-editor', ydoc, webrtcOpts); //indexed db\n\nconst indexeddbProvider = new IndexeddbPersistence('text-editor', ydoc);\nindexeddbProvider.on('synced', () => {\n  console.log('content from the database is loaded');\n});\n\nfunction App() {\n  _s();\n\n  const [username, setUsername] = useState('');\n  const [users, setUsers] = useState([]); // name randomiser\n\n  const customColors = ['green', 'blue', 'red', 'amber', 'orange', 'pink', 'purple'];\n  const randomColor = uniqueNamesGenerator({\n    dictionaries: [customColors],\n    length: 1,\n    separator: \"-\"\n  });\n\n  function handleClear() {\n    yarray.delete(0, yarray.length); // yarray.push([username])\n  }\n\n  useEffect(() => {\n    attachQuillRefs();\n    yarray.observe(_ => {\n      setUsers(yarray.toArray());\n      console.log('yarray state: ', yarray.toArray());\n    });\n    indexeddbProvider.get('username').then(db_username => {\n      if (db_username) {\n        return db_username;\n      } else {\n        const newUser = uniqueNamesGenerator({\n          dictionaries: [adjectives, colors, animals],\n          separator: ' ',\n          length: 2\n        }); // yarray.push([newUser])\n\n        indexeddbProvider.set('username', newUser);\n        return newUser;\n      }\n    }).then(currentUsername => {\n      setUsername(currentUsername);\n      webrtcProvider.awareness.setLocalStateField('user', {\n        name: currentUsername,\n        color: randomColor\n      });\n    });\n    new QuillBinding(ytext, quillRef, webrtcProvider.awareness);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"md\",\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Your nickname: \", username]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Currently editting: \", users.join(\" \")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ReactQuill, {\n        ref: el => {\n          reactQuillRef = el;\n        },\n        theme: 'snow',\n        modules: {\n          cursors: true\n        } // onFocus={() => onEditorFoucs()}\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: () => handleClear(),\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"aVQ2h1sCUBzFTj0Glq9uZBmsrmI=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/aksaakov/Projects/collaborative-editor/src/App.js"],"names":["makeStyles","TextField","React","useEffect","useState","CssBaseline","Container","Y","IndexeddbPersistence","WebrtcProvider","QuillBinding","Quill","QuillCursors","ReactQuill","awarenessProtocol","Button","uniqueNamesGenerator","colors","animals","adjectives","require","register","quillRef","reactQuillRef","attachQuillRefs","getEditor","ydoc","Doc","ytext","getText","yarray","getArray","console","log","store","webrtcOpts","filterBcConns","awareness","Awareness","webrtcProvider","indexeddbProvider","on","App","username","setUsername","users","setUsers","customColors","randomColor","dictionaries","length","separator","handleClear","delete","observe","_","toArray","get","then","db_username","newUser","set","currentUsername","setLocalStateField","name","color","join","el","cursors"],"mappings":"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","sourcesContent":["import './App.css';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport React, { useEffect, useState } from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Container from '@material-ui/core/Container';\nimport * as Y from 'yjs'\nimport { IndexeddbPersistence } from 'y-indexeddb'\nimport { WebrtcProvider } from 'y-webrtc'\nimport { QuillBinding } from 'y-quill'\nimport Quill from 'quill';\nimport QuillCursors from 'quill-cursors'\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\nimport * as awarenessProtocol from 'y-protocols/awareness.js'\nimport { Button } from '@material-ui/core';\nconst { uniqueNamesGenerator, colors, animals, adjectives } = require('unique-names-generator');\n\nQuill.register('modules/cursors', QuillCursors)\n\nlet quillRef=null;\nlet reactQuillRef=null;\n\nconst attachQuillRefs = () => {\n  if (typeof reactQuillRef.getEditor !== 'function') return;\n  quillRef = reactQuillRef.getEditor();\n}\n\nconst ydoc = new Y.Doc()\nconst ytext = ydoc.getText('sometext')\nconst yarray = ydoc.getArray('somearray')\n\nconsole.log(ydoc.store)\n// webrtc\nconst webrtcOpts = { \n  filterBcConns: true, \n  awareness: new awarenessProtocol.Awareness(ydoc)\n}\nconst webrtcProvider = new WebrtcProvider('text-editor', ydoc, webrtcOpts)\n\n//indexed db\nconst indexeddbProvider = new IndexeddbPersistence('text-editor', ydoc)\nindexeddbProvider.on('synced', () => {\n  console.log('content from the database is loaded')\n})\n\nfunction App() {\n  const [username, setUsername] = useState('');\n  const [users, setUsers] = useState([]);\n\n  // name randomiser\n  const customColors = [\n    'green', 'blue', 'red', 'amber', 'orange', 'pink', 'purple'\n  ]\n  const randomColor = uniqueNamesGenerator({ dictionaries: [customColors], length: 1, separator: \"-\" });\n\n  function handleClear() {\n    yarray.delete(0, yarray.length)\n    // yarray.push([username])\n  }\n\n  useEffect(()=>{\n    attachQuillRefs()   \n\n    yarray.observe(_ => {\n      setUsers(yarray.toArray())\n      console.log('yarray state: ', yarray.toArray())\n    })\n\n    indexeddbProvider.get('username').then((db_username) => {\n      if (db_username) {\n        return db_username\n      } else {\n        const newUser = uniqueNamesGenerator({ dictionaries: [adjectives, colors, animals], separator: ' ' , length: 2, });\n        // yarray.push([newUser])\n        indexeddbProvider.set('username', newUser)\n        return newUser\n      }\n    }).then((currentUsername)=>{\n      setUsername(currentUsername)\n      webrtcProvider.awareness.setLocalStateField('user', {\n        name: currentUsername,\n        color: randomColor\n      })\n    });\n\n    new QuillBinding(ytext, quillRef, webrtcProvider.awareness)\n  }, [])\n \n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <Container maxWidth=\"md\" className=\"container\"> \n        <h3>Your nickname: {username}</h3>\n        <h4>Currently editting: {users.join(\" \")}</h4>\n        {/* <form className={classes.root} noValidate autoComplete=\"off\">\n        </form> */}\n        <ReactQuill \n          ref={(el) => { reactQuillRef = el }}\n          theme={'snow'} \n          modules={{ cursors:true }}  \n          // onFocus={() => onEditorFoucs()}\n        />\n        <Button variant=\"contained\" onClick={() => handleClear()}>Clear</Button>\n      </Container>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}